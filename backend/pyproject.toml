[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "k8s-monitoring-rag"
version = "0.1.0"
description = "Kubernetes Monitoring, RAG, and Dashboard System"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "K8s Monitoring Team"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: System :: Monitoring",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.8"
dependencies = [
    # Core Python utilities
    "colorama>=0.4.6",
    "python-dateutil>=2.8.2",
    "python-dotenv>=1.0.0",
    "pydantic>=2.4.2",
    "requests>=2.31.0",
    "tqdm>=4.66.1",
    "typing-extensions>=4.8.0",
    
    # Data processing and ML
    "numpy>=1.24.3",
    "pandas>=2.0.3",
    "scikit-learn>=1.0.2",
    "joblib>=1.1.1",
    
    # Machine Learning and AI
    "tensorflow>=2.12.0",
    "tf-keras>=2.12.0",
    "sentence-transformers>=2.2.2",
    
    # LLM and RAG
    "chromadb>=0.4.18",
    "langchain>=0.0.267",
    "langchain-chroma>=0.0.1",
    "langchain-nvidia-ai-endpoints>=0.0.1",
    "langchain-openai>=0.0.2",
    "langgraph>=0.0.15",
    "openai>=1.3.5",
    
    # Kubernetes
    "kubernetes>=28.1.0",
    
    # Web frameworks
    "fastapi",
    "flask>=2.2.3",
    "flask-cors>=3.0.10",
    "uvicorn",
    
    # Visualization (for dashboard components)
    "matplotlib>=3.5.3",
    "seaborn>=0.12.2",
    "plotly>=5.14.1",
    "streamlit>=1.22.0",
    "streamlit-plotly-events>=0.0.6",
    
    # Utilities
    "networkx>=3.1",
    "pillow>=9.5.0",
    "portalocker>=2.7.0",
    "pyyaml>=6.0",
    "watchdog>=3.0.0",
]

[project.optional-dependencies]
dev = [
    "pylint>=3.0.2",
    "pytest>=7.4.3",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.5.0",
]
test = [
    "pytest>=7.4.3",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
]

[project.urls]
Homepage = "https://github.com/your-org/k8s-monitoring-rag"
Repository = "https://github.com/your-org/k8s-monitoring-rag"
Issues = "https://github.com/your-org/k8s-monitoring-rag/issues"

[project.scripts]
k8s-monitor = "k8s_monitoring.cli:main"
rag-cli = "k8s_monitoring.rag_cli:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["k8s_monitoring"]

[tool.pylint.messages_control]
disable = [
    "missing-docstring",
    "too-few-public-methods",
    "too-many-arguments",
    "too-many-locals",
    "too-many-branches",
    "too-many-statements",
]

[tool.pylint.format]
max-line-length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
    "*_test.py",
]